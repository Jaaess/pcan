/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package peak.can;

import peak.can.basic.TPCANMsg;
import peak.can.basic.TPCANBaudrate;
import peak.can.basic.TPCANHandle;
import peak.can.basic.PCANBasic;
import peak.can.basic.TPCANType;
import peak.can.basic.TPCANStatus;
import peak.can.basic.RcvEventDispatcher;
import peak.can.basic.TPCANMessageType;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author softsec
 */
public class MainJFrame extends javax.swing.JFrame {
    
        // Static Token For Synchronization
    static public final Object token = new Object();
    // PCANBasic instance
    PCANBasic pcanBasic = null;
    volatile  ChannelItem channelitem = null; 
    // Configured language
    short languageIndex = 0;
    // Thread to read CAN messages
    CANReadThread canReadThread;
    CANReceiveThread canReceiveThread;
    // Thread to send CAN messages
    CANSendThread canSendThread;   
    // Thread to DOS the CANBUS
    DoSThread dt;
    // Thread to refresh data grid
    //TableMessageThread tableMessageThread;
    // Map to store received messages
    private HashMap<Integer, TableDataRow> receivedData = new HashMap<Integer, TableDataRow>();
    // Grid column to show TimeStamp
    private TableColumn columnTimeStamp = null;
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
       
        // Crate New instance of PCANBasic
        pcanBasic = new PCANBasic();
       
         
        // JNI Initialization
        pcanBasic.initializeAPI();
        
        // Init TimeStamp Grid Column
        columnTimeStamp = new TableColumn();
        columnTimeStamp.setMinWidth(100);
        columnTimeStamp.setMaxWidth(100);
        columnTimeStamp.setWidth(100);
        columnTimeStamp.setResizable(false);
        columnTimeStamp.setHeaderValue("Rcv Time");
        columnTimeStamp.setModelIndex(5);
        jTableMessage.getColumnModel().removeColumn(jTableMessage.getColumnModel().getColumn(jTableMessage.getColumnModel().getColumnCount() - 1));//?????这是什么操作
        
        // Create and start ReadMessage Thread
        channelitem=new ChannelItem(TPCANHandle.PCAN_USBBUS1,TPCANType.PCAN_TYPE_ISA_SJA ); 
        
        //创建接收线程并启动
        canReceiveThread = new CANReceiveThread(pcanBasic, channelitem, jTableMessage);//, receivedData);
        canReceiveThread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupFilter = new javax.swing.ButtonGroup();
        buttonGroupMessageShowType = new javax.swing.ButtonGroup();
        jPanelCarInfo = new javax.swing.JPanel();
        jComboBoxBrand = new javax.swing.JComboBox<>();
        jComboBoxModel = new javax.swing.JComboBox<>();
        jComboBoxBaudrate = new javax.swing.JComboBox<>();
        jLabelBrand = new javax.swing.JLabel();
        jLabelModel = new javax.swing.JLabel();
        jLabelBaudrate = new javax.swing.JLabel();
        jTextFieldDBCPath = new javax.swing.JTextField();
        jLabelDBCPath = new javax.swing.JLabel();
        jButtonLoadBDC = new javax.swing.JButton();
        jButtonConnect = new javax.swing.JButton();
        jButtonUnconnect = new javax.swing.JButton();
        jButtonStart = new javax.swing.JButton();
        jButtonPause = new javax.swing.JButton();
        jButtonTuopu = new javax.swing.JButton();
        jPanelFilter = new javax.swing.JPanel();
        jCheckBoxExtendFileter = new javax.swing.JCheckBox();
        jRadioButtonOpenFilter = new javax.swing.JRadioButton();
        jRadioButtonCloseFilter = new javax.swing.JRadioButton();
        jRadioButtonCustomFilter = new javax.swing.JRadioButton();
        jLabelFilterFrom = new javax.swing.JLabel();
        jTextFieldFilterFrom = new javax.swing.JTextField();
        jLabelFilterTo = new javax.swing.JLabel();
        jTextFieldFilterTo = new javax.swing.JTextField();
        jButtonAddFilter = new javax.swing.JButton();
        jButtonFilterList = new javax.swing.JButton();
        jPanelReadMessage = new javax.swing.JPanel();
        jRadioButtonDisplayByTime = new javax.swing.JRadioButton();
        jRadioButtonDispalyByCount = new javax.swing.JRadioButton();
        jCheckBoxShowTimeStamp = new javax.swing.JCheckBox();
        jButtonClearTable = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMessage = new javax.swing.JTable();
        jPanelWriteMessage = new javax.swing.JPanel();
        jLabelID = new javax.swing.JLabel();
        jTextFieldWriteID = new javax.swing.JTextField();
        jLabelData = new javax.swing.JLabel();
        jTextFieldData0 = new javax.swing.JTextField();
        jTextFieldData1 = new javax.swing.JTextField();
        jTextFieldData2 = new javax.swing.JTextField();
        jTextFieldData3 = new javax.swing.JTextField();
        jTextFieldData4 = new javax.swing.JTextField();
        jTextFieldData5 = new javax.swing.JTextField();
        jTextFieldData6 = new javax.swing.JTextField();
        jTextFieldData7 = new javax.swing.JTextField();
        jLabelLength = new javax.swing.JLabel();
        jTextFieldWriteLen = new javax.swing.JTextField();
        jCheckBoxWriteExtend = new javax.swing.JCheckBox();
        jLabelInterval = new javax.swing.JLabel();
        jTextFieldWriteInterval = new javax.swing.JTextField();
        jLabelms = new javax.swing.JLabel();
        jLabelTimes = new javax.swing.JLabel();
        jTextFieldWriteTimes = new javax.swing.JTextField();
        jButtonSend = new javax.swing.JButton();
        jPanelReplay = new javax.swing.JPanel();
        jButtonSaveFile = new javax.swing.JButton();
        jTextFieldReplayFilePath = new javax.swing.JTextField();
        jButtonLoadFile = new javax.swing.JButton();
        jLabelRepalyFrom = new javax.swing.JLabel();
        jTextFieldReplayFrom = new javax.swing.JTextField();
        jLabelReplayTo = new javax.swing.JLabel();
        jTextFieldReplayTo = new javax.swing.JTextField();
        jButtonReplay = new javax.swing.JButton();
        jPanelDoS = new javax.swing.JPanel();
        jLabelDosID = new javax.swing.JLabel();
        jTextFieldDosID = new javax.swing.JTextField();
        jLabelDosData = new javax.swing.JLabel();
        jTextFieldDosData = new javax.swing.JTextField();
        jButtonDos = new javax.swing.JButton();
        jButtonDosStop = new javax.swing.JButton();
        jPanelFuzz = new javax.swing.JPanel();
        jLabelFuzzID = new javax.swing.JLabel();
        jTextFieldFuzzID = new javax.swing.JTextField();
        jTextFieldFuzzData = new javax.swing.JTextField();
        jLabelFuzzStartData = new javax.swing.JLabel();
        jLabelFuzzID1 = new javax.swing.JLabel();
        jTextFieldFuzzUDSFrom = new javax.swing.JTextField();
        jLabelFuzzID2 = new javax.swing.JLabel();
        jTextFieldFuzzUDSTo = new javax.swing.JTextField();
        jButtonFuzz = new javax.swing.JButton();
        jButtonFuzzUDS = new javax.swing.JButton();
        javax.swing.JButton jButtonFuzzStop = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanelInfo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaInfo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelCarInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Connect"));
        jPanelCarInfo.setToolTipText("connect");

        jComboBoxBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBrandActionPerformed(evt);
            }
        });

        jComboBoxBaudrate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1000kbps", "800kbps", "500kbps", "250kbps", "125kbps", "50kbps" }));
        jComboBoxBaudrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBaudrateActionPerformed(evt);
            }
        });

        jLabelBrand.setText("品牌：");

        jLabelModel.setText("型号：");

        jLabelBaudrate.setText("波特率：");

        jLabelDBCPath.setText("车型协议：");

        jButtonLoadBDC.setText("载入...");

        jButtonConnect.setText("连接");
        jButtonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectActionPerformed(evt);
            }
        });

        jButtonUnconnect.setText("断开");
        jButtonUnconnect.setToolTipText("");
        jButtonUnconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUnconnectActionPerformed(evt);
            }
        });

        jButtonStart.setText("开始");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jButtonPause.setText("暂停");
        jButtonPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPauseActionPerformed(evt);
            }
        });

        jButtonTuopu.setText("拓扑探测");
        jButtonTuopu.setToolTipText("");

        javax.swing.GroupLayout jPanelCarInfoLayout = new javax.swing.GroupLayout(jPanelCarInfo);
        jPanelCarInfo.setLayout(jPanelCarInfoLayout);
        jPanelCarInfoLayout.setHorizontalGroup(
            jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCarInfoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCarInfoLayout.createSequentialGroup()
                        .addComponent(jButtonConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jButtonUnconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonPause, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonTuopu, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCarInfoLayout.createSequentialGroup()
                        .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCarInfoLayout.createSequentialGroup()
                                .addComponent(jComboBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCarInfoLayout.createSequentialGroup()
                                .addComponent(jLabelModel)
                                .addGap(95, 95, 95)))
                        .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelBaudrate))
                        .addGap(50, 50, 50)
                        .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDBCPath)
                            .addGroup(jPanelCarInfoLayout.createSequentialGroup()
                                .addComponent(jTextFieldDBCPath, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jButtonLoadBDC, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanelCarInfoLayout.setVerticalGroup(
            jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCarInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelModel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelBaudrate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelDBCPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonLoadBDC, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jComboBoxBrand)
                    .addComponent(jComboBoxModel)
                    .addComponent(jComboBoxBaudrate)
                    .addComponent(jTextFieldDBCPath))
                .addGap(18, 18, 18)
                .addGroup(jPanelCarInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jButtonUnconnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPause)
                    .addComponent(jButtonTuopu))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanelFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter"));

        jCheckBoxExtendFileter.setText("扩展帧");
        jCheckBoxExtendFileter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxExtendFileterActionPerformed(evt);
            }
        });

        buttonGroupFilter.add(jRadioButtonOpenFilter);
        jRadioButtonOpenFilter.setText("打开");
        jRadioButtonOpenFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOpenFilterActionPerformed(evt);
            }
        });

        buttonGroupFilter.add(jRadioButtonCloseFilter);
        jRadioButtonCloseFilter.setSelected(true);
        jRadioButtonCloseFilter.setText("关闭");
        jRadioButtonCloseFilter.setToolTipText("");
        jRadioButtonCloseFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCloseFilterActionPerformed(evt);
            }
        });

        buttonGroupFilter.add(jRadioButtonCustomFilter);
        jRadioButtonCustomFilter.setText("自定义");
        jRadioButtonCustomFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCustomFilterActionPerformed(evt);
            }
        });

        jLabelFilterFrom.setText("从：");

        jTextFieldFilterFrom.setToolTipText("");

        jLabelFilterTo.setText("到：");

        jButtonAddFilter.setText("添加");
        jButtonAddFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddFilterActionPerformed(evt);
            }
        });

        jButtonFilterList.setText("过滤列表");

        javax.swing.GroupLayout jPanelFilterLayout = new javax.swing.GroupLayout(jPanelFilter);
        jPanelFilter.setLayout(jPanelFilterLayout);
        jPanelFilterLayout.setHorizontalGroup(
            jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFilterLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jCheckBoxExtendFileter)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonOpenFilter)
                .addGap(23, 23, 23)
                .addComponent(jRadioButtonCloseFilter)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonCustomFilter)
                .addGap(58, 58, 58)
                .addComponent(jLabelFilterFrom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldFilterFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelFilterTo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldFilterTo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButtonAddFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButtonFilterList)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFilterLayout.setVerticalGroup(
            jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFilterLayout.createSequentialGroup()
                .addGroup(jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxExtendFileter)
                    .addComponent(jRadioButtonOpenFilter)
                    .addComponent(jRadioButtonCloseFilter)
                    .addComponent(jRadioButtonCustomFilter)
                    .addComponent(jLabelFilterFrom)
                    .addComponent(jTextFieldFilterFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFilterTo)
                    .addComponent(jTextFieldFilterTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddFilter)
                    .addComponent(jButtonFilterList))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jPanelReadMessage.setBorder(javax.swing.BorderFactory.createTitledBorder("Read Message"));

        buttonGroupMessageShowType.add(jRadioButtonDisplayByTime);
        jRadioButtonDisplayByTime.setSelected(true);
        jRadioButtonDisplayByTime.setText("顺序模式");
        jRadioButtonDisplayByTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDisplayByTimeActionPerformed(evt);
            }
        });

        buttonGroupMessageShowType.add(jRadioButtonDispalyByCount);
        jRadioButtonDispalyByCount.setText("统计模式");
        jRadioButtonDispalyByCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDispalyByCountActionPerformed(evt);
            }
        });

        jCheckBoxShowTimeStamp.setText("显示时间");
        jCheckBoxShowTimeStamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowTimeStampActionPerformed(evt);
            }
        });

        jButtonClearTable.setText("清除");
        jButtonClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearTableActionPerformed(evt);
            }
        });

        jTableMessage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "ID", "Length", "Data", "Count", "RcvTime"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMessage.setShowHorizontalLines(false);
        jTableMessage.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTableMessage);

        javax.swing.GroupLayout jPanelReadMessageLayout = new javax.swing.GroupLayout(jPanelReadMessage);
        jPanelReadMessage.setLayout(jPanelReadMessageLayout);
        jPanelReadMessageLayout.setHorizontalGroup(
            jPanelReadMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReadMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonDisplayByTime)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonDispalyByCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxShowTimeStamp)
                .addGap(27, 27, 27)
                .addComponent(jButtonClearTable)
                .addGap(24, 24, 24))
            .addComponent(jScrollPane1)
        );
        jPanelReadMessageLayout.setVerticalGroup(
            jPanelReadMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReadMessageLayout.createSequentialGroup()
                .addGroup(jPanelReadMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jRadioButtonDisplayByTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelReadMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonDispalyByCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxShowTimeStamp)
                        .addComponent(jButtonClearTable)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelWriteMessage.setBorder(javax.swing.BorderFactory.createTitledBorder("Write Message"));

        jLabelID.setText("ID(Hex)：");

        jTextFieldWriteID.setText("00000000");

        jLabelData.setText("Data(Hex)：");

        jTextFieldData0.setText("00");
        jTextFieldData0.setToolTipText("");

        jTextFieldData1.setText("00");

        jTextFieldData2.setText("00");
        jTextFieldData2.setToolTipText("");

        jTextFieldData3.setText("00");

        jTextFieldData4.setText("00");

        jTextFieldData5.setText("00");

        jTextFieldData6.setText("00");

        jTextFieldData7.setText("00");
        jTextFieldData7.setToolTipText("");

        jLabelLength.setText("Length：");

        jTextFieldWriteLen.setText("8");
        jTextFieldWriteLen.setToolTipText("");

        jCheckBoxWriteExtend.setText("扩展帧");

        jLabelInterval.setText("发送间隔：");

        jTextFieldWriteInterval.setText("100");
        jTextFieldWriteInterval.setToolTipText("");

        jLabelms.setText("ms");

        jLabelTimes.setText("发送次数：");

        jTextFieldWriteTimes.setText("1");
        jTextFieldWriteTimes.setToolTipText("");

        jButtonSend.setText("发送");
        jButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelWriteMessageLayout = new javax.swing.GroupLayout(jPanelWriteMessage);
        jPanelWriteMessage.setLayout(jPanelWriteMessageLayout);
        jPanelWriteMessageLayout.setHorizontalGroup(
            jPanelWriteMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanelWriteMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                        .addComponent(jLabelID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWriteID, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                        .addComponent(jCheckBoxWriteExtend)
                        .addGap(51, 51, 51)
                        .addComponent(jLabelInterval)))
                .addGap(5, 5, 5)
                .addGroup(jPanelWriteMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                        .addComponent(jLabelData)
                        .addGap(3, 3, 3)
                        .addComponent(jTextFieldData0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                        .addComponent(jTextFieldWriteInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelms)
                        .addGap(18, 18, 18)))
                .addGroup(jPanelWriteMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabelTimes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWriteTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(jButtonSend, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jTextFieldData1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldData2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldData3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldData4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldData5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldData6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldData7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(jLabelLength)
                        .addGap(4, 4, 4)
                        .addComponent(jTextFieldWriteLen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWriteMessageLayout.setVerticalGroup(
            jPanelWriteMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWriteMessageLayout.createSequentialGroup()
                .addGroup(jPanelWriteMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID)
                    .addComponent(jTextFieldWriteID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelData)
                    .addComponent(jTextFieldData0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldData7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLength)
                    .addComponent(jTextFieldWriteLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelWriteMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxWriteExtend)
                    .addComponent(jLabelInterval)
                    .addComponent(jTextFieldWriteInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelms)
                    .addComponent(jLabelTimes)
                    .addComponent(jTextFieldWriteTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSend)))
        );

        jPanelReplay.setBorder(javax.swing.BorderFactory.createTitledBorder("Replay"));

        jButtonSaveFile.setText("实时保存");
        jButtonSaveFile.setToolTipText("");
        jButtonSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveFileActionPerformed(evt);
            }
        });

        jTextFieldReplayFilePath.setToolTipText("");

        jButtonLoadFile.setText("打开...");
        jButtonLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadFileActionPerformed(evt);
            }
        });

        jLabelRepalyFrom.setText("从：");

        jTextFieldReplayFrom.setText("0");
        jTextFieldReplayFrom.setToolTipText("");

        jLabelReplayTo.setText("到：");

        jButtonReplay.setText("重放");

        javax.swing.GroupLayout jPanelReplayLayout = new javax.swing.GroupLayout(jPanelReplay);
        jPanelReplay.setLayout(jPanelReplayLayout);
        jPanelReplayLayout.setHorizontalGroup(
            jPanelReplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReplayLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jButtonSaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldReplayFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonLoadFile)
                .addGap(41, 41, 41)
                .addComponent(jLabelRepalyFrom)
                .addGap(1, 1, 1)
                .addComponent(jTextFieldReplayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelReplayTo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldReplayTo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButtonReplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelReplayLayout.setVerticalGroup(
            jPanelReplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReplayLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelReplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaveFile)
                    .addComponent(jTextFieldReplayFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLoadFile)
                    .addComponent(jLabelRepalyFrom)
                    .addComponent(jTextFieldReplayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelReplayTo)
                    .addComponent(jTextFieldReplayTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonReplay)))
        );

        jPanelDoS.setBorder(javax.swing.BorderFactory.createTitledBorder("DoS"));

        jLabelDosID.setText("ID(Hex)：");

        jTextFieldDosID.setText("00000000");

        jLabelDosData.setText("Data(Hex)：");

        jTextFieldDosData.setText("00 00 00 00 00 00 00 00");

        jButtonDos.setText("DoS测试");
        jButtonDos.setToolTipText("");
        jButtonDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDosActionPerformed(evt);
            }
        });

        jButtonDosStop.setText("停止");
        jButtonDosStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDosStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDoSLayout = new javax.swing.GroupLayout(jPanelDoS);
        jPanelDoS.setLayout(jPanelDoSLayout);
        jPanelDoSLayout.setHorizontalGroup(
            jPanelDoSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDoSLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabelDosID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDosID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabelDosData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDosData, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jButtonDos, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButtonDosStop, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDoSLayout.setVerticalGroup(
            jPanelDoSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDoSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabelDosID)
                .addComponent(jTextFieldDosID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabelDosData)
                .addComponent(jTextFieldDosData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButtonDos)
                .addComponent(jButtonDosStop))
        );

        jPanelFuzz.setBorder(javax.swing.BorderFactory.createTitledBorder("Fuzz"));

        jLabelFuzzID.setText("ID(Hex)：");

        jTextFieldFuzzID.setText("00000000");

        jTextFieldFuzzData.setText("00 00 00 00 00 00 00 00");

        jLabelFuzzStartData.setText(" Start Data：");

        jLabelFuzzID1.setText("ID From：");

        jTextFieldFuzzUDSFrom.setText("00000000");
        jTextFieldFuzzUDSFrom.setToolTipText("");

        jLabelFuzzID2.setText("ID To：");

        jTextFieldFuzzUDSTo.setText("00000000");
        jTextFieldFuzzUDSTo.setToolTipText("");

        jButtonFuzz.setText("Fuzz Data");

        jButtonFuzzUDS.setText("Fuzz UDS");

        jButtonFuzzStop.setText("停止");
        jButtonFuzzStop.setToolTipText("");

        jLabel1.setForeground(new java.awt.Color(40, 57, 142));
        jLabel1.setText("Data Fuzz :");

        jLabel2.setForeground(new java.awt.Color(40, 57, 142));
        jLabel2.setText("UDS Discovery:");

        javax.swing.GroupLayout jPanelFuzzLayout = new javax.swing.GroupLayout(jPanelFuzz);
        jPanelFuzz.setLayout(jPanelFuzzLayout);
        jPanelFuzzLayout.setHorizontalGroup(
            jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFuzzLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(71, 71, 71)
                .addGroup(jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFuzzLayout.createSequentialGroup()
                        .addComponent(jLabelFuzzID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFuzzID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFuzzStartData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFuzzData, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFuzzLayout.createSequentialGroup()
                        .addComponent(jLabelFuzzID1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFuzzUDSFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFuzzID2)
                        .addGap(1, 1, 1)
                        .addComponent(jTextFieldFuzzUDSTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonFuzz, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(jButtonFuzzUDS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addComponent(jButtonFuzzStop, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFuzzLayout.setVerticalGroup(
            jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFuzzLayout.createSequentialGroup()
                .addGroup(jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFuzzStartData)
                    .addComponent(jTextFieldFuzzData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFuzzID)
                    .addComponent(jTextFieldFuzzID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFuzz)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFuzzLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelFuzzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelFuzzID1)
                            .addComponent(jTextFieldFuzzUDSFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelFuzzID2)
                            .addComponent(jTextFieldFuzzUDSTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(jButtonFuzzUDS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanelFuzzLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButtonFuzzStop)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Info"));

        jTextAreaInfo.setColumns(20);
        jTextAreaInfo.setRows(5);
        jScrollPane2.setViewportView(jTextAreaInfo);

        javax.swing.GroupLayout jPanelInfoLayout = new javax.swing.GroupLayout(jPanelInfo);
        jPanelInfo.setLayout(jPanelInfoLayout);
        jPanelInfoLayout.setHorizontalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanelInfoLayout.setVerticalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelReadMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelWriteMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelReplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelDoS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelFuzz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelCarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelCarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelReadMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelWriteMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelReplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDoS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelFuzz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectActionPerformed
        // TODO add your handling code here:
        TPCANStatus res;
        res=pcanBasic.Initialize(TPCANHandle.PCAN_USBBUS1, TPCANBaudrate.PCAN_BAUD_500K, TPCANType.PCAN_TYPE_ISA_SJA, 100, (short)3);
        if (res == TPCANStatus.PCAN_ERROR_OK){
            showInfo(channelitem.getHandle().toString() + " Successfully initialized", false);
            jButtonConnect.setEnabled(false);
            jButtonUnconnect.setEnabled(true);
        }else{
            getError(res);
        }
        
    }//GEN-LAST:event_jButtonConnectActionPerformed

    private void jButtonUnconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUnconnectActionPerformed
        // TODO add your handling code here:
       TPCANStatus res;
       // Unitializes current Channel
       res = uninitialize(channelitem);
       if(res==TPCANStatus.PCAN_ERROR_OK){
           showInfo(channelitem.getHandle().toString() + " Successfully unitialized", false);
           //channelitem=null;//释放
           jButtonUnconnect.setEnabled(false);
           jButtonConnect.setEnabled(true);
       }else{
           getError(res);
       }
    }//GEN-LAST:event_jButtonUnconnectActionPerformed
    
    //开始按钮点击后的响应
    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        // TODO add your handling code here:
         if(!channelitem.getWorking()){
            channelitem.setWorking(true);
            jButtonStart.setEnabled(false);
            jButtonPause.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jButtonPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPauseActionPerformed
        // TODO add your handling code here:
         if(channelitem.getWorking()){
            channelitem.setWorking(false);
            jButtonStart.setEnabled(true);
            jButtonPause.setEnabled(false);
        }
    }//GEN-LAST:event_jButtonPauseActionPerformed

    private void jCheckBoxExtendFileterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxExtendFileterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxExtendFileterActionPerformed

    private void jRadioButtonOpenFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOpenFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonOpenFilterActionPerformed

    private void jRadioButtonCloseFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCloseFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonCloseFilterActionPerformed

    private void jRadioButtonCustomFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCustomFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonCustomFilterActionPerformed

    private void jButtonAddFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddFilterActionPerformed

    private void jRadioButtonDisplayByTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDisplayByTimeActionPerformed
        // TODO add your handling code here:
        changeReadMode(jRadioButtonDisplayByTime.isSelected());
    }//GEN-LAST:event_jRadioButtonDisplayByTimeActionPerformed

    private void jRadioButtonDispalyByCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDispalyByCountActionPerformed
        // TODO add your handling code here:
        changeReadMode(jRadioButtonDisplayByTime.isSelected());
    }//GEN-LAST:event_jRadioButtonDispalyByCountActionPerformed

    private void jButtonClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearTableActionPerformed
        // TODO add your handling code here:
       synchronized(MainJFrame.token) {
            receivedData.clear();
            ((DefaultTableModel)jTableMessage.getModel()).setRowCount(0);
        }
    }//GEN-LAST:event_jButtonClearTableActionPerformed

    private void jButtonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendActionPerformed
        // TODO add your handling code here:
        TPCANMsg msgToSend=new TPCANMsg();
        
        msgToSend.setID((int)hexTextToInt(jTextFieldWriteID.getText()));
        msgToSend.setLength(Byte.parseByte(jTextFieldWriteLen.getText()));
        msgToSend.setType((jCheckBoxWriteExtend.isSelected()) ? TPCANMessageType.PCAN_MESSAGE_EXTENDED : TPCANMessageType.PCAN_MESSAGE_STANDARD);
        
        // We get so much data as the Len of the message
       if (msgToSend.getLength() >= 1)
           msgToSend.getData()[0] = (byte) hexTextToInt(jTextFieldData0.getText());
        if (msgToSend.getLength() >= 2)            
           msgToSend.getData()[1] = (byte) hexTextToInt(jTextFieldData1.getText());            
        if (msgToSend.getLength() >= 3)          
           msgToSend.getData()[2] = (byte) hexTextToInt(jTextFieldData2.getText());           
        if (msgToSend.getLength() >= 4)              
           msgToSend.getData()[3] = (byte) hexTextToInt(jTextFieldData3.getText());
        if (msgToSend.getLength() >= 5)        
           msgToSend.getData()[4] = (byte) hexTextToInt(jTextFieldData4.getText());        
        if (msgToSend.getLength() >= 6)           
           msgToSend.getData()[5] = (byte) hexTextToInt(jTextFieldData5.getText());            
        if (msgToSend.getLength() >= 7)              
           msgToSend.getData()[6] = (byte) hexTextToInt(jTextFieldData6.getText());             
        if (msgToSend.getLength() >= 8)           
           msgToSend.getData()[7] = (byte) hexTextToInt(jTextFieldData7.getText());
                
        //if ((canSendThread != null) && (!canSendThread.isInterrupted()))
        canSendThread = new CANSendThread(pcanBasic,channelitem,msgToSend,Integer.parseInt(jTextFieldWriteInterval.
                getText()),Long.parseLong(jTextFieldWriteTimes.getText()));
        canSendThread.start();
        try {
            canSendThread.join();
        } catch (Exception e) {
            e.printStackTrace();
        }
        canSendThread = null;
    }//GEN-LAST:event_jButtonSendActionPerformed
    
    private void jComboBoxBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxBrandActionPerformed

    private void jComboBoxBaudrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBaudrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxBaudrateActionPerformed
    
    private void jButtonSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveFileActionPerformed
        // TODO add your handling code here:
        FileSavingThread fileSaving = null;
        fileSaving = new FileSavingThread(receivedData);
        fileSaving.start();
        try {
            fileSaving.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        fileSaving = null;
    }//GEN-LAST:event_jButtonSaveFileActionPerformed

    private void jButtonLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadFileActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButtonLoadFileActionPerformed

    private void jCheckBoxShowTimeStampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowTimeStampActionPerformed
        // TODO add your handling code here:
        if (canReadThread != null)
        {
            canReadThread.setReadTimeStamp(jCheckBoxShowTimeStamp.isSelected());
        }
        // Add or Remove column
        if (jCheckBoxShowTimeStamp.isSelected())
        {
            jTableMessage.getColumnModel().addColumn(columnTimeStamp);
        }
        else
        {
            jTableMessage.getColumnModel().removeColumn(columnTimeStamp);
        }
    }//GEN-LAST:event_jCheckBoxShowTimeStampActionPerformed

    private void jButtonDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDosActionPerformed
        // TODO add your handling code here:
        TPCANMsg msg = new TPCANMsg();
        msg.setID((int) hexTextToInt(jTextFieldDosID.getText()));
        msg.setType(TPCANMessageType.PCAN_MESSAGE_STANDARD);
        String []strs = jTextFieldDosData.getText().split(" ");
        msg.setLength((byte)strs.length);
        byte []data = new byte[strs.length];
        for(int i=0;i<strs.length;i++)
            data[i]=(byte)hexTextToInt(strs[i]);
        msg.setData(data, (byte)strs.length);
        dt = new DoSThread(msg,channelitem,pcanBasic);
        dt.start();
    }//GEN-LAST:event_jButtonDosActionPerformed

    private void jButtonDosStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDosStopActionPerformed
        // TODO add your handling code here:
        if(dt.isAlive()){
            dt.exit=true;
            try {    
                dt.join();
            } catch (InterruptedException ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonDosStopActionPerformed

    
      // Process and Displays PCANBasic Error Message
    private void getError(TPCANStatus status)
    {
        StringBuffer error;
        // If Error
        if (status != TPCANStatus.PCAN_ERROR_OK)
        {
            error = new StringBuffer("");
            status = pcanBasic.GetErrorText(status, languageIndex, error);
            // Display Error
            if (status == TPCANStatus.PCAN_ERROR_OK)
            {
                showInfo(error.toString(), true);
            }
            // Unable To Retrieve Error
            else
            {
                showInfo("Unable to call GetErrorText Function !", true);
            }
            error = null;
        }
    }

    // Displays Info Message
    private void showInfo(String text, boolean error)
    {
        // If it's an error message, configure foreground in red
        if (error)
        {
            jTextAreaInfo.setForeground(new java.awt.Color(255, 0, 0));
        }
        // Else configure foreground in black
        else
        {
            jTextAreaInfo.setForeground(new java.awt.Color(0, 0, 0));
        }
        // Update txtInfo box
        jTextAreaInfo.setText(text);
    }
    
     // Unitializes Channel using ChannelItem
    private TPCANStatus uninitialize(ChannelItem item)
    {
        TPCANStatus status;
        // Sets Channel in pause if need be
        if (item.getWorking())
        {
            item.setWorking(false);
        }
        // Releases the connected PCAN-Basic channel
        status = pcanBasic.Uninitialize(item.getHandle());
        // Process Result
        if (status != TPCANStatus.PCAN_ERROR_OK)
        {
            getError(status);
        }
        return status;
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt)                                   
    {                                       
        //Close App
        TPCANStatus status;

        // Stop Timer Thread
        if ((canReadThread != null) && (!canReadThread.isInterrupted()))
        {
            canReadThread.interrupt();
            try
            {
                canReadThread.join();
            }
            catch (InterruptedException ex)
            { }
        }
            
        // Stop Timer Send Thread
        if ((canSendThread != null) && (!canSendThread.isInterrupted()))
        {
            canSendThread.interrupt();
            try
            {
                canSendThread.join();
            }
            catch (InterruptedException ex)
            { }
        }        
    
        status = uninitialize(channelitem);
        if (status != TPCANStatus.PCAN_ERROR_OK){
            return;
        }
        // Exit the application
        System.exit(0);
    }  
    
      // Changes the read method function
    private void changeReadMode(boolean useTimerMode)
    {
        TPCANStatus status;

        // Stop Timer Thread
        if ((canReadThread != null) && (!canReadThread.isInterrupted()))
        {
            canReadThread.interrupt();
            try
            {
                canReadThread.join();
            }
            catch (InterruptedException ex)
            { }
            canReadThread=null;
        }

        // Create New CANReadThread with default values
        canReadThread = new CANReadThread(pcanBasic, channelitem, receivedData);
        canReadThread.setReadTimeStamp(jCheckBoxShowTimeStamp.isSelected());
        if (useTimerMode)
        {   
            // If isWorking, call SetRcvEvent on current channel
            if (channelitem.getWorking())
            {
                status = pcanBasic.ResetRcvEvent(channelitem.getHandle());
                if (status != TPCANStatus.PCAN_ERROR_OK)
                {
                    getError(status);
                }
            }
            // Start Timer Thread to read CAN Messages
            canReadThread.start();
        }
        else
        {
            // Set canReadThread as RcvEvent Listener
            RcvEventDispatcher.setListener(canReadThread);
            
            // If isWorking, call SetRcvEvent on current channel
            if (channelitem.getWorking())
            {
                status = pcanBasic.SetRcvEvent(channelitem.getHandle());
                if (status != TPCANStatus.PCAN_ERROR_OK)
                {
                    getError(status);
                }
            }
        }
    }
    
     // Converts a string to hex
    static long hexTextToInt(String toConvert)
    {
        long iToReturn = 0;
        int iExp = 0;
        char chByte;

        // The string to convert is empty
        if (toConvert.equals(""))
        {
            return 0;
        }
        // The string have more than 8 character (the equivalent value
        // exeeds the DWORD capacyty
        if (toConvert.length() > 8)
        {
            return 0;
        }
        // We convert any character to its Upper case
        toConvert = toConvert.toUpperCase();
        try
        {
            // We calculate the number using the Hex To Decimal formula
            for (int i = toConvert.length() - 1; i >= 0; i--)
            {
                chByte = (char) toConvert.getBytes()[i];
                switch ((int) chByte)
                {
                    case 65:
                        iToReturn += (long) (10 * Math.pow(16.0f, iExp));
                        break;
                    case 66:
                        iToReturn += (long) (11 * Math.pow(16.0f, iExp));
                        break;
                    case 67:
                        iToReturn += (long) (12 * Math.pow(16.0f, iExp));
                        break;
                    case 68:
                        iToReturn += (long) (13 * Math.pow(16.0f, iExp));
                        break;
                    case 69:
                        iToReturn += (long) (14 * Math.pow(16.0f, iExp));
                        break;
                    case 70:
                        iToReturn += (long) (15 * Math.pow(16.0f, iExp));
                        break;
                    default:
                        if ((chByte < 48) || (chByte > 57))
                        {
                            return -1;
                        }
                        iToReturn += (long) Integer.parseInt(((Character) chByte).toString()) * Math.pow(16.0f, iExp);
                        break;
                }
                iExp++;
            }
        }
        catch (Exception ex)
        {
            // Error, return 0
            return 0;
        }
        return iToReturn;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupFilter;
    private javax.swing.ButtonGroup buttonGroupMessageShowType;
    private javax.swing.JButton jButtonAddFilter;
    private javax.swing.JButton jButtonClearTable;
    private javax.swing.JButton jButtonConnect;
    private javax.swing.JButton jButtonDos;
    private javax.swing.JButton jButtonDosStop;
    private javax.swing.JButton jButtonFilterList;
    private javax.swing.JButton jButtonFuzz;
    private javax.swing.JButton jButtonFuzzUDS;
    private javax.swing.JButton jButtonLoadBDC;
    private javax.swing.JButton jButtonLoadFile;
    private javax.swing.JButton jButtonPause;
    private javax.swing.JButton jButtonReplay;
    private javax.swing.JButton jButtonSaveFile;
    private javax.swing.JButton jButtonSend;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonTuopu;
    private javax.swing.JButton jButtonUnconnect;
    private javax.swing.JCheckBox jCheckBoxExtendFileter;
    private javax.swing.JCheckBox jCheckBoxShowTimeStamp;
    private javax.swing.JCheckBox jCheckBoxWriteExtend;
    private javax.swing.JComboBox<String> jComboBoxBaudrate;
    private javax.swing.JComboBox<String> jComboBoxBrand;
    private javax.swing.JComboBox<String> jComboBoxModel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelBaudrate;
    private javax.swing.JLabel jLabelBrand;
    private javax.swing.JLabel jLabelDBCPath;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelDosData;
    private javax.swing.JLabel jLabelDosID;
    private javax.swing.JLabel jLabelFilterFrom;
    private javax.swing.JLabel jLabelFilterTo;
    private javax.swing.JLabel jLabelFuzzID;
    private javax.swing.JLabel jLabelFuzzID1;
    private javax.swing.JLabel jLabelFuzzID2;
    private javax.swing.JLabel jLabelFuzzStartData;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelInterval;
    private javax.swing.JLabel jLabelLength;
    private javax.swing.JLabel jLabelModel;
    private javax.swing.JLabel jLabelRepalyFrom;
    private javax.swing.JLabel jLabelReplayTo;
    private javax.swing.JLabel jLabelTimes;
    private javax.swing.JLabel jLabelms;
    private javax.swing.JPanel jPanelCarInfo;
    private javax.swing.JPanel jPanelDoS;
    private javax.swing.JPanel jPanelFilter;
    private javax.swing.JPanel jPanelFuzz;
    private javax.swing.JPanel jPanelInfo;
    private javax.swing.JPanel jPanelReadMessage;
    private javax.swing.JPanel jPanelReplay;
    private javax.swing.JPanel jPanelWriteMessage;
    private javax.swing.JRadioButton jRadioButtonCloseFilter;
    private javax.swing.JRadioButton jRadioButtonCustomFilter;
    private javax.swing.JRadioButton jRadioButtonDispalyByCount;
    private javax.swing.JRadioButton jRadioButtonDisplayByTime;
    private javax.swing.JRadioButton jRadioButtonOpenFilter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMessage;
    private javax.swing.JTextArea jTextAreaInfo;
    private javax.swing.JTextField jTextFieldDBCPath;
    private javax.swing.JTextField jTextFieldData0;
    private javax.swing.JTextField jTextFieldData1;
    private javax.swing.JTextField jTextFieldData2;
    private javax.swing.JTextField jTextFieldData3;
    private javax.swing.JTextField jTextFieldData4;
    private javax.swing.JTextField jTextFieldData5;
    private javax.swing.JTextField jTextFieldData6;
    private javax.swing.JTextField jTextFieldData7;
    private javax.swing.JTextField jTextFieldDosData;
    private javax.swing.JTextField jTextFieldDosID;
    private javax.swing.JTextField jTextFieldFilterFrom;
    private javax.swing.JTextField jTextFieldFilterTo;
    private javax.swing.JTextField jTextFieldFuzzData;
    private javax.swing.JTextField jTextFieldFuzzID;
    private javax.swing.JTextField jTextFieldFuzzUDSFrom;
    private javax.swing.JTextField jTextFieldFuzzUDSTo;
    private javax.swing.JTextField jTextFieldReplayFilePath;
    private javax.swing.JTextField jTextFieldReplayFrom;
    private javax.swing.JTextField jTextFieldReplayTo;
    private javax.swing.JTextField jTextFieldWriteID;
    private javax.swing.JTextField jTextFieldWriteInterval;
    private javax.swing.JTextField jTextFieldWriteLen;
    private javax.swing.JTextField jTextFieldWriteTimes;
    // End of variables declaration//GEN-END:variables
}
